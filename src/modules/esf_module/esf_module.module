<?php

use \Esf\Server;
use Esf\Settings;

module_load_include('inc', 'esf_module', 'includes/esf_module');

define('ESF_MODULE_GUACAMOLE_SERVER_DOMAIN', 'guacamole_server_domain');
define('ESF_MODULE_GUACAMOLE_SERVER_PORT', 'guacamole_server_port');
define('ESF_MODULE_GUACAMOLE_SERVER_PATH', 'guacamole_server_path');
define('ESF_MODULE_GUACAMOLE_HOME', 'guacamole_home');
define('ESF_MODULE_GUACAMOLE_PROPERTIES_FILE', 'guacamole_properties_file');

/**
 * Implements hook_init().
 */
function esf_module_init() {
  global $user;

  $settings = array(
    'esf' => array(
      'protocol' => variable_get_value('aspi_protocol'),
      'server_url' => Server::getUrl(),
      'server_domain' => Server::getDomain(),
      'server_port' => Server::getPort(),
      'server_path' => Server::getPath(),
    ),
    'subject_map' => array(
      // Evropske pravo
      '951' => array('obchodni-spolecnosti', 'obchodni-pravo'),
      // Financni trhy
      '965' => array('hospodarska-soutez'),
      // Financni ucetnictvi I
      '952' => array('obchodni-pravo', 'cenne-papiry' ),
      // Financni ucetnictvi II
      '953' => array('dusevni-vlastnictvi'),
      // Obcacnsky zakonik
      '1101' => array('dusevni-vlastnictvi', 'hospodarska-soutez'),
      // Obchodni pravo I (old)
      '1105' => array('cenne-papiry' ),
      // Obchodni pravo I (new)
      '954' => array('hospodarska-soutez'),
      // Osobni finance
      '966' => array('dusevni-vlastnictvi', 'hospodarska-soutez'),
      // Pracovni pravo
      '967' => array('hospodarska-soutez'),
      // Pravo a finance
      '968' => array('obchodni-pravo', 'cenne-papiry' ),
      // Regulace a dohled nad financnim trhem
      '971' => array('hospodarska-soutez'),
      // Soutezni pravo
      '969' => array('obchodni-spolecnosti', 'obchodni-pravo'),
      // Spravni proces
      '970' => array('dusevni-vlastnictvi', 'hospodarska-soutez'),
      // Zaklady prava
      '950' => array('cenne-papiry'),
    )
  );

  drupal_add_js($settings, 'setting');

  $username = Settings::username();

  if (user_is_logged_in() && strlen($username) == 0 && strpos(current_path(), 'user/') === FALSE) {

    $message = t('Please fill in your ASPI credentials <a href="!url">here</a>.',
      array('!url' => url("user/$user->uid/edit")));

    $message .= t('If you don\'t have credentials yet, please go <a href="#">here</a>.');

    drupal_get_messages(NULL, TRUE);
    drupal_set_message($message, 'warning');
  }
}

/**
 * Implements hook_permission().
 */
function esf_module_permission() {
  return array(
    'administer esf' => array(
      'title' => t('Administer ESF configuration'),
      'description' => t('Allows to set or alter settings for Guacamole server'),
    ),
    'access aspi' => array(
      'title' => t('Access ASPI Remote'),
      'description' => t('Allows a user to connect to an ASPI remote machine server'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function esf_module_menu() {
  return array(
    'home' => array(
      'title' => 'Home',
      'page callback' => 'esf_module_page_home',
      'access arguments' => array('access content'),
      'file' => 'includes/esf_module.pages.inc',
      'type' => MENU_CALLBACK,
    ),
    'aspi' => array(
      'title' => 'ASPI Portal',
      'page callback' => 'esf_module_page_aspi',
      'access arguments' => array('access aspi'),
      'file' => 'includes/esf_module.pages.inc',
      'type' => MENU_CALLBACK,
    ),
    'aspi/ajax/login' => array(
      'page callback' => 'esf_module_ajax_login',
      'access arguments' => array('access aspi'),
      'file' => 'includes/esf_module.ajax.inc',
      'type' => MENU_CALLBACK,
    ),
  );
}

/**
 * Implements hook_user_insert().
 */
function esf_module_user_insert(&$edit, $account, $category) {
  if (empty($account->field_aspi_username[LANGUAGE_NONE][0]['value']) ||
    empty($account->field_aspi_password[LANGUAGE_NONE][0]['password_field'])) {
    $uid = $account->uid;

    // Display a message to the user, notifying him that he should fill
    // in his ASPI credentials.
    $message = t('Please fill in your ASPI credentials <a href="!url">here</a>.',
      array('!url' => url("user/$uid/edit")));

    $options = array(
      'type' => 'warning',
      'pdm_type' => 'ASPI credentials',
      'repeat' => FALSE,
      'persist' => TRUE,
      'uid' => $uid,
    );

    //pdm_create_message($message, $options);
  }
}

/**
 * Implements hook_theme().
 */
function esf_module_theme() {
  return array(
    'map_area' => array(
      'variables' => array(
        'items' => array(),
        'name' => NULL,
      ),
    ),
  );
}

/**
 * Returns html with rendered map / area.
 *
 * @param $variables
 *   associative array with parameters for rendering the map
 * @return string
 */
function theme_map_area($variables) {
  $name = $variables['name'];
  $items = $variables['items'];

  $output = "<map name='$name'>";

  //<area id="squidhead" href="#" shape="circle" coords="290,102,30" alt="Octoface" data-maphilight="{&quot;stroke&quot;:false,&quot;fillColor&quot;:&quot;ff0000&quot;,&quot;fillOpacity&quot;:0.6}" title="Metadata'd up a bit">

  foreach ($items as $id => $item) {
    $id = 'map-' . $id;
    $shape = $item['shape'];
    $coords = $item['coords'];
    $title = $item['title'];

    $maphilight_params = array();

    if (!empty($item['stroke'])) {
      $maphilight_params[] = '"stroke":"' . $item['stroke'] . '"';
    } else {
      $maphilight_params[] = '"stroke":false';
    }
    if (!empty($item['fillcolor'])) {
      $maphilight_params[] = '"fillColor":"' . $item['fillcolor'] . '"';
    }
    if (!empty($item['fillopacity'])) {
      $maphilight_params[] = '"fillOpacity":' . $item['fillopacity'];
    }

    $maphilight = '{' . implode(',', $maphilight_params) . '}';

    $output .= "<area id='$id' shape='$shape' coords='$coords' title='$title' data-maphilight='$maphilight' />";
  }

  $output .= "</map>";

  return $output;
}